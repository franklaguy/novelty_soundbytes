{"code":"Object.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar Observable_1 = require(\"rxjs/Observable\");\r\nvar Subject_1 = require(\"rxjs/Subject\");\r\nvar meteor_rxjs_1 = require(\"meteor-rxjs\");\r\nvar ng2_pagination_1 = require(\"ng2-pagination\");\r\nvar tmeasday_publish_counts_1 = require(\"meteor/tmeasday:publish-counts\");\r\nvar angular2_meteor_accounts_ui_1 = require(\"angular2-meteor-accounts-ui\");\r\nrequire(\"rxjs/add/operator/combineLatest\");\r\nvar available_collection_1 = require(\"/both/collections/available.collection\");\r\nvar available_list_component_html_1 = require(\"./available-list.component.html\");\r\nvar available_list_component_scss_1 = require(\"./available-list.component.scss\");\r\nvar AvailableListComponent = (function () {\r\n    function AvailableListComponent(paginationService) {\r\n        this.paginationService = paginationService;\r\n        this.pageSize = new Subject_1.Subject();\r\n        this.curPage = new Subject_1.Subject();\r\n        this.nameOrder = new Subject_1.Subject();\r\n        this.availableSize = 0;\r\n        this.name = new Subject_1.Subject();\r\n    }\r\n    AvailableListComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.imagesSubs = meteor_rxjs_1.MeteorObservable.subscribe('images').subscribe();\r\n        this.optionsSub = Observable_1.Observable.combineLatest(this.pageSize, this.curPage, this.nameOrder, this.name).subscribe(function (_a) {\r\n            var pageSize = _a[0], curPage = _a[1], nameOrder = _a[2], name = _a[3];\r\n            var options = {\r\n                limit: pageSize,\r\n                skip: (curPage - 1) * pageSize,\r\n                sort: { name: nameOrder }\r\n            };\r\n            _this.paginationService.setCurrentPage(_this.paginationService.defaultId(), curPage);\r\n            if (_this.availableSub) {\r\n                _this.availableSub.unsubscribe();\r\n            }\r\n            _this.availableSub = meteor_rxjs_1.MeteorObservable.subscribe('available', options, name).subscribe(function () {\r\n                _this.available = available_collection_1.Available.find({}, {\r\n                    sort: {\r\n                        name: nameOrder\r\n                    }\r\n                }).zone();\r\n            });\r\n        });\r\n        this.paginationService.register({\r\n            id: this.paginationService.defaultId(),\r\n            itemsPerPage: 10,\r\n            currentPage: 1,\r\n            totalItems: this.availableSize,\r\n        });\r\n        this.pageSize.next(10);\r\n        this.curPage.next(1);\r\n        this.nameOrder.next(1);\r\n        this.name.next('');\r\n        this.autorunSub = meteor_rxjs_1.MeteorObservable.autorun().subscribe(function () {\r\n            _this.availableSize = tmeasday_publish_counts_1.Counts.get('numberOfAvailable');\r\n            _this.paginationService.setTotalItems(_this.paginationService.defaultId(), _this.availableSize);\r\n        });\r\n    };\r\n    AvailableListComponent.prototype.removeAvailable = function (available) {\r\n        available_collection_1.Available.remove(available._id);\r\n    };\r\n    AvailableListComponent.prototype.search = function (value) {\r\n        this.curPage.next(1);\r\n        this.name.next(value);\r\n        console.log(this);\r\n    };\r\n    AvailableListComponent.prototype.onPageChanged = function (page) {\r\n        this.curPage.next(page);\r\n    };\r\n    AvailableListComponent.prototype.changeSortOrder = function (nameOrder) {\r\n        this.nameOrder.next(parseInt(nameOrder));\r\n    };\r\n    AvailableListComponent.prototype.isOwner = function (availableModel) {\r\n        return this.user && this.user._id === availableModel.owner;\r\n    };\r\n    AvailableListComponent.prototype.ngOnDestroy = function () {\r\n        this.availableSub.unsubscribe();\r\n        this.optionsSub.unsubscribe();\r\n        this.autorunSub.unsubscribe();\r\n        this.imagesSubs.unsubscribe();\r\n    };\r\n    return AvailableListComponent;\r\n}());\r\nAvailableListComponent = __decorate([\r\n    core_1.Component({\r\n        selector: 'available-list',\r\n        template: available_list_component_html_1.default,\r\n        styles: [available_list_component_scss_1.default]\r\n    }),\r\n    angular2_meteor_accounts_ui_1.InjectUser('user'),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof ng2_pagination_1.PaginationService !== \"undefined\" && ng2_pagination_1.PaginationService) === \"function\" && _a || Object])\r\n], AvailableListComponent);\r\nexports.AvailableListComponent = AvailableListComponent;\r\nvar _a;\r\n//# sourceMappingURL=available-list.component.js.map","sourceMap":{"version":3,"file":"available-list.component.js","sourceRoot":"","sources":["client/imports/app/available/available-list.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { MeteorObservable } from 'meteor-rxjs';\nimport { PaginationService } from 'ng2-pagination';\nimport { Counts } from 'meteor/tmeasday:publish-counts';\nimport { InjectUser } from 'angular2-meteor-accounts-ui'; \nimport 'rxjs/add/operator/combineLatest';\nimport { Available } from '/both/collections/available.collection';\nimport { AvailableModel } from '/both/models/available.model';\nimport template from './available-list.component.html';\nimport style from './available-list.component.scss';\n\ninterface Pagination {\n\tlimit: number;\n\tskip: number;\n}\n\ninterface Options extends Pagination {\n\t[key: string]: any\n}\n\n@Component({\n\tselector: 'available-list',\n\ttemplate,\n  styles: [ style ]\n})\n\n@InjectUser('user')\nexport class AvailableListComponent implements OnInit, OnDestroy {\n\tavailable: Observable<AvailableModel[]>;\n\tavailableSub: Subscription;\n\tpageSize: Subject<number> = new Subject<number>();\n\tcurPage: Subject<number> = new Subject<number>();\n\tnameOrder: Subject<number> = new Subject<number>();\n\toptionsSub: Subscription;\n\tavailableSize: number = 0;\n\tautorunSub: Subscription;\n\tname: Subject<string> = new Subject<string>();\n\tuser: Meteor.User;\n\timagesSubs: Subscription;\n\n\tconstructor(\n    private paginationService: PaginationService\n  ) {}\n\n\tngOnInit() {\n\t\tthis.imagesSubs = MeteorObservable.subscribe('images').subscribe();\n\n\t\tthis.optionsSub = Observable.combineLatest(\n\t\t\tthis.pageSize,\n\t\t\tthis.curPage,\n\t\t\tthis.nameOrder,\n\t\t\tthis.name\n\t\t).subscribe(([pageSize, curPage, nameOrder, name]) => {\n\t\t\tconst options: Options = {\n\t\t\t\tlimit: pageSize as number,\n\t\t\t\tskip: ((curPage as number) - 1) * (pageSize as number),\n\t\t\t\tsort: { name: nameOrder as number }\n\t\t\t};\n\n\t\t\tthis.paginationService.setCurrentPage(this.paginationService.defaultId(), curPage as number);\n\n\t\t\tif (this.availableSub) {\n\t\t\t\tthis.availableSub.unsubscribe();\n\t\t\t}\n\n\t\t\tthis.availableSub = MeteorObservable.subscribe('available', options, name).subscribe(() => {\n\t\t\t\tthis.available = Available.find({}, {\n\t\t\t\t\tsort: {\n\t\t\t\t\t\tname: nameOrder\n\t\t\t\t\t}\n\t\t\t\t}).zone();\n\t\t\t});\n\t\t});\n\n\t\tthis.paginationService.register({\n      id: this.paginationService.defaultId(),\n      itemsPerPage: 10,\n      currentPage: 1,\n      totalItems: this.availableSize,\n    });\n\n\t\tthis.pageSize.next(10);\n\t\tthis.curPage.next(1);\n\t\tthis.nameOrder.next(1);\n\t\tthis.name.next('');\n\n\t\tthis.autorunSub = MeteorObservable.autorun().subscribe(() => {\n\t\t\tthis.availableSize = Counts.get('numberOfAvailable');\n\t\t\tthis.paginationService.setTotalItems(this.paginationService.defaultId(), this.availableSize);\n\t\t});\n\t}\n\n\tremoveAvailable(available: AvailableModel): void {\n\t\tAvailable.remove(available._id);\n\t}\n\n\tsearch(value: string): void {\n\t\tthis.curPage.next(1);\n\t\tthis.name.next(value);\n\t\tconsole.log(this);\n\t}\n\n\tonPageChanged(page: number): void {\n\t\tthis.curPage.next(page);\n\t}\n\n\tchangeSortOrder(nameOrder: string): void {\n\t\tthis.nameOrder.next(parseInt(nameOrder));\n\t}\n\n\tisOwner(availableModel: AvailableModel): boolean {\n\t\treturn this.user && this.user._id === availableModel.owner;\n\t}\n\n\tngOnDestroy() {\n\t\tthis.availableSub.unsubscribe();\n\t\tthis.optionsSub.unsubscribe();\n\t\tthis.autorunSub.unsubscribe();\n\t\tthis.imagesSubs.unsubscribe();\n\t}\n}"]},"version":"1","isExternal":true,"dependencies":{"modules":["/both/collections/available.collection.ts","/both/models/available.model.ts"],"refFiles":[],"refTypings":[],"mappings":[{"modulePath":"@angular/core","resolvedPath":null,"external":false,"resolved":false},{"modulePath":"rxjs/Observable","resolvedPath":null,"external":false,"resolved":false},{"modulePath":"rxjs/Subject","resolvedPath":null,"external":false,"resolved":false},{"modulePath":"rxjs/Subscription","resolvedPath":null,"external":false,"resolved":false},{"modulePath":"meteor-rxjs","resolvedPath":null,"external":false,"resolved":false},{"modulePath":"ng2-pagination","resolvedPath":null,"external":false,"resolved":false},{"modulePath":"meteor/tmeasday:publish-counts","resolvedPath":null,"external":false,"resolved":false},{"modulePath":"angular2-meteor-accounts-ui","resolvedPath":null,"external":false,"resolved":false},{"modulePath":"rxjs/add/operator/combineLatest","resolvedPath":null,"external":false,"resolved":false},{"modulePath":"/both/collections/available.collection","resolvedPath":"/both/collections/available.collection","external":false,"resolved":true},{"modulePath":"/both/models/available.model","resolvedPath":"/both/models/available.model","external":false,"resolved":true},{"modulePath":"./available-list.component.html","resolvedPath":null,"external":false,"resolved":false},{"modulePath":"./available-list.component.scss","resolvedPath":null,"external":false,"resolved":false}]},"diagnostics":{"syntacticErrors":[],"semanticErrors":[{"code":2307,"fileName":"client/imports/app/available/available-list.component.ts","message":"Cannot find module '@angular/core'.","line":1,"column":46},{"code":2307,"fileName":"client/imports/app/available/available-list.component.ts","message":"Cannot find module 'rxjs/Observable'.","line":2,"column":28},{"code":2307,"fileName":"client/imports/app/available/available-list.component.ts","message":"Cannot find module 'rxjs/Subject'.","line":3,"column":25},{"code":2307,"fileName":"client/imports/app/available/available-list.component.ts","message":"Cannot find module 'rxjs/Subscription'.","line":4,"column":30},{"code":2307,"fileName":"client/imports/app/available/available-list.component.ts","message":"Cannot find module 'meteor-rxjs'.","line":5,"column":34},{"code":2307,"fileName":"client/imports/app/available/available-list.component.ts","message":"Cannot find module 'ng2-pagination'.","line":6,"column":35},{"code":2307,"fileName":"client/imports/app/available/available-list.component.ts","message":"Cannot find module 'angular2-meteor-accounts-ui'.","line":8,"column":28},{"code":2503,"fileName":"client/imports/app/available/available-list.component.ts","message":"Cannot find namespace 'Meteor'.","line":41,"column":8}]},"hash":"cc64a208f112e5da8d0f477cf815be499e3af672"}