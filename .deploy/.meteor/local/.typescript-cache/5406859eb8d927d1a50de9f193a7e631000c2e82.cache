{"code":"Object.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar router_1 = require(\"@angular/router\");\r\nvar meteor_1 = require(\"meteor/meteor\");\r\nvar meteor_rxjs_1 = require(\"meteor-rxjs\");\r\nvar angular2_meteor_accounts_ui_1 = require(\"angular2-meteor-accounts-ui\");\r\nrequire(\"rxjs/add/operator/map\");\r\nvar available_collection_1 = require(\"/both/collections/available.collection\");\r\nvar users_collection_1 = require(\"/both/collections/users.collection\");\r\nvar available_details_component_html_1 = require(\"./available-details.component.html\");\r\nvar available_list_component_scss_1 = require(\"./available-list.component.scss\");\r\nvar AvailableDetailsComponent = (function () {\r\n    function AvailableDetailsComponent(route) {\r\n        this.route = route;\r\n    }\r\n    AvailableDetailsComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.paramsSub = this.route.params\r\n            .map(function (params) { return params['detailsId']; })\r\n            .subscribe(function (detailsId) {\r\n            _this.detailsId = detailsId;\r\n            if (_this.detailsSub) {\r\n                _this.detailsSub.unsubscribe();\r\n            }\r\n            _this.detailsSub = meteor_rxjs_1.MeteorObservable.subscribe('availableModel', _this.availableModel).subscribe(function () {\r\n                meteor_rxjs_1.MeteorObservable.autorun().subscribe(function () {\r\n                    _this.availableModel = available_collection_1.Available.findOne(_this.detailsId);\r\n                    _this.getUsers(_this.availableModel);\r\n                });\r\n            });\r\n            if (_this.uninvitedSub) {\r\n                _this.uninvitedSub.unsubscribe();\r\n            }\r\n            _this.uninvitedSub = meteor_rxjs_1.MeteorObservable.subscribe('uninvited', _this.detailsId).subscribe(function () {\r\n                _this.getUsers(_this.availableModel);\r\n            });\r\n        });\r\n    };\r\n    AvailableDetailsComponent.prototype.getUsers = function (availableModel) {\r\n        if (availableModel) {\r\n            this.users = users_collection_1.Users.find({\r\n                _id: {\r\n                    $nin: availableModel.invited || [],\r\n                    $ne: meteor_1.Meteor.userId()\r\n                }\r\n            }).zone();\r\n        }\r\n    };\r\n    AvailableDetailsComponent.prototype.saveDetails = function () {\r\n        if (!meteor_1.Meteor.userId()) {\r\n            alert('Please log in to update this available item');\r\n        }\r\n        available_collection_1.Available.update(this.availableModel._id, {\r\n            $set: {\r\n                name: this.availableModel.name,\r\n                description: this.availableModel.description,\r\n                links: this.availableModel.links,\r\n                'public': this.availableModel.public\r\n            }\r\n        });\r\n    };\r\n    AvailableDetailsComponent.prototype.invite = function (user) {\r\n        meteor_rxjs_1.MeteorObservable.call('invite', this.availableModel._id, user._id).subscribe(function () {\r\n            alert('User notified');\r\n        }, function (error) {\r\n            alert(\"Failed to notify due to \" + error);\r\n        });\r\n    };\r\n    AvailableDetailsComponent.prototype.reply = function (rsvp) {\r\n        meteor_rxjs_1.MeteorObservable.call('reply', this.availableModel._id, rsvp).subscribe(function () {\r\n            alert('You successfully replied');\r\n        }, function (error) {\r\n            alert(\"Failed to reply due to \" + error);\r\n        });\r\n    };\r\n    Object.defineProperty(AvailableDetailsComponent.prototype, \"isOwner\", {\r\n        get: function () {\r\n            return this.availableModel && this.user && this.user._id === this.availableModel.owner;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AvailableDetailsComponent.prototype, \"isPublic\", {\r\n        get: function () {\r\n            return this.availableModel && this.availableModel.public;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AvailableDetailsComponent.prototype, \"isInvited\", {\r\n        get: function () {\r\n            if (this.availableModel && this.user) {\r\n                var invited = this.availableModel.invited || [];\r\n                return invited.indexOf(this.user._id) !== -1;\r\n            }\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AvailableDetailsComponent.prototype.ngOnDestroy = function () {\r\n        this.paramsSub.unsubscribe();\r\n        this.detailsSub.unsubscribe();\r\n        this.uninvitedSub.unsubscribe();\r\n    };\r\n    return AvailableDetailsComponent;\r\n}());\r\nAvailableDetailsComponent = __decorate([\r\n    core_1.Component({\r\n        selector: 'available-details',\r\n        template: available_details_component_html_1.default,\r\n        styles: [available_list_component_scss_1.default]\r\n    }),\r\n    angular2_meteor_accounts_ui_1.InjectUser('user'),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" && _a || Object])\r\n], AvailableDetailsComponent);\r\nexports.AvailableDetailsComponent = AvailableDetailsComponent;\r\nvar _a;\r\n//# sourceMappingURL=available-details.component.js.map","sourceMap":{"version":3,"file":"available-details.component.js","sourceRoot":"","sources":["client/imports/app/available/available-details.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Meteor } from 'meteor/meteor';\nimport { MeteorObservable } from 'meteor-rxjs';\nimport { InjectUser } from \"angular2-meteor-accounts-ui\";\nimport { MouseEvent } from \"angular2-google-maps/core\";\nimport 'rxjs/add/operator/map';\nimport { Available } from '/both/collections/available.collection';\nimport { AvailableModel } from '/both/models/available.model';\nimport { Users } from '/both/collections/users.collection';\nimport { User } from '/both/models/user.model';\nimport { CanActivate } from '@angular/router'; // POC: currently not using\nimport template from './available-details.component.html';\nimport style from './available-list.component.scss';\n\n@Component({\n\tselector: 'available-details',\n\ttemplate,\n  styles: [ style ]\n})\n\n@InjectUser('user')\nexport class AvailableDetailsComponent implements OnInit, OnDestroy {\n\tdetailsId: string;\n\tparamsSub: Subscription;\n\tavailableModel: AvailableModel;\n\tdetailsSub: Subscription;\n\tusers: Observable<User>;\n\tuninvitedSub: Subscription;\n\tuser: Meteor.User;\n\n\tconstructor(\n\t\tprivate route: ActivatedRoute\n\t) {}\n\n\tngOnInit() {\n\t\tthis.paramsSub = this.route.params\n\t\t\t.map(params => params['detailsId'])\n\t\t\t.subscribe(detailsId => {\n\t\t\t\tthis.detailsId = detailsId;\n\n\t\t\t\tif (this.detailsSub) {\n\t\t\t\t\tthis.detailsSub.unsubscribe();\n\t\t\t\t}\n\n\t\t\t\tthis.detailsSub = MeteorObservable.subscribe('availableModel', this.availableModel).subscribe(() => {\n          MeteorObservable.autorun().subscribe(() => {\n          \tthis.availableModel = Available.findOne(this.detailsId);\n          \tthis.getUsers(this.availableModel);\n          });\n        });\n\n        if (this.uninvitedSub){\n        \tthis.uninvitedSub.unsubscribe();\n        }\n\n        this.uninvitedSub = MeteorObservable.subscribe('uninvited', this.detailsId).subscribe(() => {\n        \tthis.getUsers(this.availableModel);\n        });\n\t\t\t});\n\t}\n\n\tgetUsers(availableModel:AvailableModel) {\n\t\tif (availableModel) {\n\t\t\tthis.users = Users.find({\n\t\t\t\t_id: {\n\t\t\t\t\t$nin: availableModel.invited || [],\n\t\t\t\t\t$ne: Meteor.userId()\n\t\t\t\t}\n\t\t\t}).zone();\n\t\t}\n\t}\n\n\tsaveDetails() {\n\t\tif(!Meteor.userId()) {\n\t\t\talert('Please log in to update this available item');\n\t\t}\n\n\t\tAvailable.update(this.availableModel._id, {\n\t\t\t$set: {\n\t\t\t\tname: this.availableModel.name,\n\t\t\t\tdescription: this.availableModel.description,\n\t\t\t\tlinks: this.availableModel.links,\n\t\t\t\t'public': this.availableModel.public\n\t\t\t}\n\t\t});\n\t}\n\n\tinvite(user: Meteor.User) {\n\t\tMeteorObservable.call('invite', this.availableModel._id, user._id).subscribe(() => {\n\t\t\talert('User notified');\n\t\t}, (error) => {\n\t\t\talert(`Failed to notify due to ${error}`);\n\t\t});\n\t}\n\n\treply(rsvp:string) {\n\t\tMeteorObservable.call('reply', this.availableModel._id, rsvp).subscribe(() => {\n\t\t\talert('You successfully replied');\n\t\t}, (error) => {\n\t\t\talert(`Failed to reply due to ${error}`);\n\t\t});\n\t}\n\n\tget isOwner(): boolean {\n\t\treturn this.availableModel && this.user && this.user._id === this.availableModel.owner;\n\t}\n\n\tget isPublic(): boolean {\n\t\treturn this.availableModel && this.availableModel.public;\n\t}\n\n\tget isInvited(): boolean {\n\t\tif (this.availableModel && this.user) {\n\t\t\tconst invited = this.availableModel.invited || [];\n\n\t\t\treturn invited.indexOf(this.user._id) !== -1;\n\t\t}\n\n\t\treturn false;\n\t}\n\t\n\tngOnDestroy() {\n\t\tthis.paramsSub.unsubscribe();\n\t\tthis.detailsSub.unsubscribe();\n\t\tthis.uninvitedSub.unsubscribe();\n\t}\n\t\n}"]},"version":"1","isExternal":true,"dependencies":{"modules":["/both/collections/available.collection.ts","/both/models/available.model.ts","/both/collections/users.collection.ts","/both/models/user.model.ts"],"refFiles":[],"refTypings":[],"mappings":[{"modulePath":"@angular/core","resolvedPath":null,"external":false,"resolved":false},{"modulePath":"@angular/router","resolvedPath":null,"external":false,"resolved":false},{"modulePath":"rxjs/Observable","resolvedPath":null,"external":false,"resolved":false},{"modulePath":"rxjs/Subscription","resolvedPath":null,"external":false,"resolved":false},{"modulePath":"meteor/meteor","resolvedPath":null,"external":false,"resolved":false},{"modulePath":"meteor-rxjs","resolvedPath":null,"external":false,"resolved":false},{"modulePath":"angular2-meteor-accounts-ui","resolvedPath":null,"external":false,"resolved":false},{"modulePath":"angular2-google-maps/core","resolvedPath":null,"external":false,"resolved":false},{"modulePath":"rxjs/add/operator/map","resolvedPath":null,"external":false,"resolved":false},{"modulePath":"/both/collections/available.collection","resolvedPath":"/both/collections/available.collection","external":false,"resolved":true},{"modulePath":"/both/models/available.model","resolvedPath":"/both/models/available.model","external":false,"resolved":true},{"modulePath":"/both/collections/users.collection","resolvedPath":"/both/collections/users.collection","external":false,"resolved":true},{"modulePath":"/both/models/user.model","resolvedPath":"/both/models/user.model","external":false,"resolved":true},{"modulePath":"./available-details.component.html","resolvedPath":null,"external":false,"resolved":false},{"modulePath":"./available-list.component.scss","resolvedPath":null,"external":false,"resolved":false}]},"diagnostics":{"syntacticErrors":[],"semanticErrors":[{"code":2307,"fileName":"client/imports/app/available/available-details.component.ts","message":"Cannot find module '@angular/core'.","line":1,"column":46},{"code":2307,"fileName":"client/imports/app/available/available-details.component.ts","message":"Cannot find module '@angular/router'.","line":2,"column":32},{"code":2307,"fileName":"client/imports/app/available/available-details.component.ts","message":"Cannot find module 'rxjs/Observable'.","line":3,"column":28},{"code":2307,"fileName":"client/imports/app/available/available-details.component.ts","message":"Cannot find module 'rxjs/Subscription'.","line":4,"column":30},{"code":2307,"fileName":"client/imports/app/available/available-details.component.ts","message":"Cannot find module 'meteor/meteor'.","line":5,"column":24},{"code":2307,"fileName":"client/imports/app/available/available-details.component.ts","message":"Cannot find module 'meteor-rxjs'.","line":6,"column":34},{"code":2307,"fileName":"client/imports/app/available/available-details.component.ts","message":"Cannot find module 'angular2-meteor-accounts-ui'.","line":7,"column":28},{"code":2307,"fileName":"client/imports/app/available/available-details.component.ts","message":"Cannot find module 'angular2-google-maps/core'.","line":8,"column":28},{"code":2307,"fileName":"client/imports/app/available/available-details.component.ts","message":"Cannot find module '@angular/router'.","line":14,"column":29}]},"hash":"5406859eb8d927d1a50de9f193a7e631000c2e82"}