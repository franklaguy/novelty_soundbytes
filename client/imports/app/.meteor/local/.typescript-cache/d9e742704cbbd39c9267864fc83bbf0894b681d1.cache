{"code":"Object.defineProperty(exports, \"__esModule\", { value: true });\r\nvar meteor_1 = require(\"meteor/meteor\");\r\nvar tmeasday_publish_counts_1 = require(\"meteor/tmeasday:publish-counts\");\r\nvar available_collection_1 = require(\"/both/collections/available.collection\");\r\nmeteor_1.Meteor.publish('available', function (options, name) {\r\n    var selector = buildQuery.call(this, null, name);\r\n    tmeasday_publish_counts_1.Counts.publish(this, 'numberOfAvailable', available_collection_1.Available.collection.find(selector), { noReady: true });\r\n    return available_collection_1.Available.find(selector, options);\r\n});\r\nmeteor_1.Meteor.publish('availableModel', function (availableModelId) {\r\n    return available_collection_1.Available.find(buildQuery.call(this, availableModelId));\r\n});\r\nfunction buildQuery(availableModelId, name) {\r\n    var isAvailable = {\r\n        $or: [\r\n            { public: true },\r\n            { $and: [\r\n                    { owner: this.userId },\r\n                    { owner: { $exists: true }\r\n                    }\r\n                ]\r\n            },\r\n            { $and: [\r\n                    { invited: this.userId },\r\n                    { invited: { $exists: true } }\r\n                ]\r\n            }\r\n        ]\r\n    };\r\n    if (availableModelId) {\r\n        return {\r\n            $and: [\r\n                { _id: availableModelId },\r\n                isAvailable\r\n            ]\r\n        };\r\n    }\r\n    var searchRegEx = { '$regex': '.*' + (name || '') + '.*', '$options': 'i' };\r\n    return {\r\n        $and: [{ 'name': searchRegEx },\r\n            isAvailable]\r\n    };\r\n}\r\n//# sourceMappingURL=available.js.map","sourceMap":{"version":3,"file":"available.js","sourceRoot":"","sources":["server/imports/publications/available.ts"],"names":[],"mappings":";AAAA,wCAAuC;AACvC,0EAAwD;AACxD,+EAAmE;AAMnE,eAAM,CAAC,OAAO,CAAC,WAAW,EAAE,UAAS,OAAgB,EAAE,IAAa;IACnE,IAAM,QAAQ,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAEnD,gCAAM,CAAC,OAAO,CAAC,IAAI,EAAE,mBAAmB,EAAE,gCAAS,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;IAElG,MAAM,CAAC,gCAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AAEH,eAAM,CAAC,OAAO,CAAC,gBAAgB,EAAE,UAAS,gBAAwB;IACjE,MAAM,CAAC,gCAAS,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC,CAAC;AAChE,CAAC,CAAC,CAAC;AAEH,oBAAoB,gBAAyB,EAAE,IAAa;IAC3D,IAAM,WAAW,GAAG;QACnB,GAAG,EAAE;YACJ,EAAE,MAAM,EAAE,IAAI,EAAE;YACb,EAAE,IAAI,EAAE;oBACP,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE;oBACtB,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,IAAI,EAAG;qBAC1B;iBACD;aACD;YACD,EAAE,IAAI,EAAE;oBACH,EAAE,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE;oBACxB,EAAE,OAAO,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE;iBAC/B;aACF;SAAC;KACH,CAAC;IAEL,EAAE,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;QACtB,MAAM,CAAC;YACN,IAAI,EAAE;gBACL,EAAE,GAAG,EAAE,gBAAgB,EAAE;gBACzB,WAAW;aACX;SACD,CAAC;IACH,CAAC;IAEF,IAAM,WAAW,GAAG,EAAE,QAAQ,EAAE,IAAI,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC,GAAG,IAAI,EAAE,UAAU,EAAE,GAAG,EAAE,CAAC;IAE7E,MAAM,CAAC;QACN,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,WAAW,EAAE;YAC3B,WAAW,CAAC;KACf,CAAC;AACH,CAAC","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Counts } from 'meteor/tmeasday:publish-counts';\nimport { Available } from '/both/collections/available.collection';\n\ninterface Options {\n\t[key: string]: any;\n}\n\nMeteor.publish('available', function(options: Options, name?: string) {\n\tconst selector = buildQuery.call(this, null, name);\n\n\tCounts.publish(this, 'numberOfAvailable', Available.collection.find(selector), { noReady: true });\n\n\treturn Available.find(selector, options);\n});\n\nMeteor.publish('availableModel', function(availableModelId: string) {\n\treturn Available.find(buildQuery.call(this, availableModelId));\n});\n\nfunction buildQuery(availableModelId?: string, name?: string): Object {\n\tconst isAvailable = {\n\t\t$or: [\n\t\t\t{ public: true },\n     \t{ $and: [\n     \t\t{ owner: this.userId }, \n     \t\t{ owner: { $exists: true  }\n       }\n      ]\n     },\n     { $and: [\n          { invited: this.userId },\n          { invited: { $exists: true } }\n        ]\n      }]\n    };\n\n\tif (availableModelId) {\n\t\treturn {\n\t\t\t$and: [\n\t\t\t\t{ _id: availableModelId },\n\t\t\t\tisAvailable \n\t\t\t]\n\t\t};\n\t}\n\nconst searchRegEx = { '$regex': '.*' + (name || '') + '.*', '$options': 'i' };\n\n\treturn {\n\t\t$and: [{ 'name': searchRegEx },\n\t\t\t\t\tisAvailable]\n\t};\n}"]},"version":"1","isExternal":true,"dependencies":{"modules":["/both/collections/available.collection.ts"],"refFiles":[],"refTypings":[],"mappings":[{"modulePath":"meteor/meteor","resolvedPath":null,"external":false,"resolved":false},{"modulePath":"meteor/tmeasday:publish-counts","resolvedPath":null,"external":false,"resolved":false},{"modulePath":"/both/collections/available.collection","resolvedPath":"/both/collections/available.collection","external":false,"resolved":true}]},"diagnostics":{"syntacticErrors":[],"semanticErrors":[{"code":2307,"fileName":"server/imports/publications/available.ts","message":"Cannot find module 'meteor/meteor'.","line":1,"column":24}]},"hash":"d9e742704cbbd39c9267864fc83bbf0894b681d1"}