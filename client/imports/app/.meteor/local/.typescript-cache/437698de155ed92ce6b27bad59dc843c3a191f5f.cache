{"code":"Object.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar available_upload_component_html_1 = require(\"./available-upload.component.html\");\r\nvar available_upload_component_scss_1 = require(\"./available-upload.component.scss\");\r\nvar images_methods_1 = require(\"/both/methods/images.methods\");\r\nvar rxjs_1 = require(\"rxjs\");\r\nvar meteor_rxjs_1 = require(\"meteor-rxjs\");\r\nvar images_collection_1 = require(\"/both/collections/images.collection\");\r\nvar AvailableUploadComponent = (function () {\r\n    function AvailableUploadComponent() {\r\n        this.fileIsOver = false;\r\n        this.uploading = false;\r\n        this.filesArray = [];\r\n        this.files = new rxjs_1.Subject();\r\n        this.onFile = new core_1.EventEmitter();\r\n    }\r\n    AvailableUploadComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.files.subscribe(function (filesArray) {\r\n            meteor_rxjs_1.MeteorObservable.autorun().subscribe(function () {\r\n                if (_this.thumbsSubscription) {\r\n                    _this.thumbsSubscription.unsubscribe();\r\n                    _this.thumbsSubscription = undefined;\r\n                }\r\n                _this.thumbsSubscription = meteor_rxjs_1.MeteorObservable.subscribe(\"thumbs\", filesArray).subscribe(function () {\r\n                    _this.thumbs = images_collection_1.Thumbs.find({\r\n                        originalStore: 'images',\r\n                        originalId: {\r\n                            $in: filesArray\r\n                        }\r\n                    }).zone();\r\n                });\r\n            });\r\n        });\r\n    };\r\n    AvailableUploadComponent.prototype.fileOver = function (fileIsOver) {\r\n        this.fileIsOver = fileIsOver;\r\n    };\r\n    AvailableUploadComponent.prototype.onFileDrop = function (file) {\r\n        var _this = this;\r\n        this.uploading = true;\r\n        images_methods_1.upload(file).then(function (result) {\r\n            _this.uploading = false;\r\n            _this.addFile(result);\r\n        })\r\n            .catch(function (error) {\r\n            _this.uploading = false;\r\n        });\r\n    };\r\n    AvailableUploadComponent.prototype.addFile = function (file) {\r\n        this.filesArray.push(file._id);\r\n        this.files.next(this.filesArray);\r\n        this.onFile.emit(file._id);\r\n    };\r\n    AvailableUploadComponent.prototype.reset = function () {\r\n        this.filesArray = [];\r\n        this.files.next(this.filesArray);\r\n    };\r\n    return AvailableUploadComponent;\r\n}());\r\n__decorate([\r\n    core_1.Output(),\r\n    __metadata(\"design:type\", typeof (_a = typeof core_1.EventEmitter !== \"undefined\" && core_1.EventEmitter) === \"function\" && _a || Object)\r\n], AvailableUploadComponent.prototype, \"onFile\", void 0);\r\nAvailableUploadComponent = __decorate([\r\n    core_1.Component({\r\n        selector: 'available-upload',\r\n        template: available_upload_component_html_1.default,\r\n        styles: [available_upload_component_scss_1.default]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [])\r\n], AvailableUploadComponent);\r\nexports.AvailableUploadComponent = AvailableUploadComponent;\r\nvar _a;\r\n//# sourceMappingURL=available-upload.component.js.map","sourceMap":{"version":3,"file":"available-upload.component.js","sourceRoot":"","sources":["client/imports/app/available/available-upload.component.ts"],"names":[],"mappings":";AAAA,sCAAwE;AACxE,qFAAyD;AACzD,qFAAsD;AACtD,+DAAsD;AACtD,6BAAyD;AACzD,2CAA+C;AAE/C,yEAA6D;AAQ7D,IAAa,wBAAwB;IASpC;QARA,eAAU,GAAY,KAAK,CAAC;QAC5B,cAAS,GAAY,KAAK,CAAC;QAC3B,eAAU,GAAa,EAAE,CAAC;QAC1B,UAAK,GAAsB,IAAI,cAAO,EAAY,CAAC;QAGzC,WAAM,GAAyB,IAAI,mBAAY,EAAW,CAAC;IAEtD,CAAC;IAEhB,2CAAQ,GAAR;QAAA,iBAkBC;QAjBA,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,UAAC,UAAU;YAC/B,8BAAgB,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC;gBACpC,EAAE,CAAC,CAAC,KAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;oBAC7B,KAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;oBACtC,KAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC;gBACrC,CAAC;gBAED,KAAI,CAAC,kBAAkB,GAAG,8BAAgB,CAAC,SAAS,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC,SAAS,CAAC;oBACpF,KAAI,CAAC,MAAM,GAAG,0BAAM,CAAC,IAAI,CAAC;wBACzB,aAAa,EAAE,QAAQ;wBACvB,UAAU,EAAE;4BACX,GAAG,EAAE,UAAU;yBACf;qBACD,CAAC,CAAC,IAAI,EAAE,CAAC;gBACX,CAAC,CAAC,CAAC;YACJ,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,2CAAQ,GAAR,UAAS,UAAmB;QAC3B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC9B,CAAC;IAED,6CAAU,GAAV,UAAW,IAAU;QAArB,iBAUC;QATA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,uBAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;YACxB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACtB,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAK;YACZ,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACxB,CAAC,CAAC,CAAA;IACH,CAAC;IAED,0CAAO,GAAP,UAAQ,IAAI;QACX,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC/B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACjC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC5B,CAAC;IAED,wCAAK,GAAL;QACC,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAClC,CAAC;IACF,+BAAC;AAAD,CAAC,AAzDD,IAyDC;AAlDU;IAAT,aAAM,EAAE;kDAAS,mBAAY,oBAAZ,mBAAY;wDAAuC;AAPzD,wBAAwB;IANpC,gBAAS,CAAC;QACV,QAAQ,EAAE,kBAAkB;QAC5B,QAAQ,2CAAA;QACR,MAAM,EAAE,CAAE,yCAAK,CAAE;KACjB,CAAC;;GAEW,wBAAwB,CAyDpC;AAzDY,4DAAwB","sourcesContent":["import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport template from './available-upload.component.html';\nimport style from './available-upload.component.scss';\nimport { upload } from '/both/methods/images.methods';\nimport { Subject, Subscription, Observable } from \"rxjs\";\nimport { MeteorObservable } from \"meteor-rxjs\";\nimport { Thumb } from '/both/models/image.model';\nimport { Thumbs } from '/both/collections/images.collection';\n\n@Component({\n\tselector: 'available-upload',\n\ttemplate,\n\tstyles: [ style ]\n})\n\nexport class AvailableUploadComponent implements OnInit {\n\tfileIsOver: boolean = false;\n\tuploading: boolean = false;\n\tfilesArray: string[] = [];\n\tfiles: Subject<string[]> = new Subject<string[]>();\n\tthumbsSubscription: Subscription;\n\tthumbs: Observable<Thumb[]>;\n\t@Output() onFile: EventEmitter<string> = new EventEmitter<string> ();\n\n\tconstructor() {}\n\n\tngOnInit() {\n\t\tthis.files.subscribe((filesArray) => {\n\t\t\tMeteorObservable.autorun().subscribe(() => {\n\t\t\t\tif (this.thumbsSubscription) {\n\t\t\t\t\tthis.thumbsSubscription.unsubscribe();\n\t\t\t\t\tthis.thumbsSubscription = undefined;\n\t\t\t\t}\n\n\t\t\t\tthis.thumbsSubscription = MeteorObservable.subscribe(\"thumbs\", filesArray).subscribe(() => {\n\t\t\t\t\tthis.thumbs = Thumbs.find({\n\t\t\t\t\t\toriginalStore: 'images',\n\t\t\t\t\t\toriginalId: {\n\t\t\t\t\t\t\t$in: filesArray\n\t\t\t\t\t\t}\n\t\t\t\t\t}).zone();\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tfileOver(fileIsOver: boolean): void {\n\t\tthis.fileIsOver = fileIsOver;\n\t}\n\n\tonFileDrop(file: File): void {\n\t\tthis.uploading = true;\n\n\t\tupload(file).then((result) => {\n\t\t\tthis.uploading = false;\n\t\t\tthis.addFile(result);\n\t\t})\n\t\t.catch((error) => {\n\t\t\tthis.uploading = false;\n\t\t})\n\t}\n\n\taddFile(file) {\n\t\tthis.filesArray.push(file._id);\n\t\tthis.files.next(this.filesArray);\n\t\tthis.onFile.emit(file._id);\n\t}\n\n\treset() {\n\t\tthis.filesArray = [];\n\t\tthis.files.next(this.filesArray);\n\t}\n}"]},"version":"1","isExternal":true,"dependencies":{"modules":["/both/methods/images.methods.ts","/both/models/image.model.ts","/both/collections/images.collection.ts"],"refFiles":[],"refTypings":[],"mappings":[{"modulePath":"@angular/core","resolvedPath":null,"external":false,"resolved":false},{"modulePath":"./available-upload.component.html","resolvedPath":null,"external":false,"resolved":false},{"modulePath":"./available-upload.component.scss","resolvedPath":null,"external":false,"resolved":false},{"modulePath":"/both/methods/images.methods","resolvedPath":"/both/methods/images.methods","external":false,"resolved":true},{"modulePath":"rxjs","resolvedPath":null,"external":false,"resolved":false},{"modulePath":"meteor-rxjs","resolvedPath":null,"external":false,"resolved":false},{"modulePath":"/both/models/image.model","resolvedPath":"/both/models/image.model","external":false,"resolved":true},{"modulePath":"/both/collections/images.collection","resolvedPath":"/both/collections/images.collection","external":false,"resolved":true}]},"diagnostics":{"syntacticErrors":[],"semanticErrors":[{"code":2307,"fileName":"client/imports/app/available/available-upload.component.ts","message":"Cannot find module '@angular/core'.","line":1,"column":57},{"code":2307,"fileName":"client/imports/app/available/available-upload.component.ts","message":"Cannot find module 'rxjs'.","line":5,"column":51},{"code":2307,"fileName":"client/imports/app/available/available-upload.component.ts","message":"Cannot find module 'meteor-rxjs'.","line":6,"column":34}]},"hash":"437698de155ed92ce6b27bad59dc843c3a191f5f"}