{"code":"Object.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar forms_1 = require(\"@angular/forms\");\r\nvar available_collection_1 = require(\"/both/collections/available.collection\");\r\nvar meteor_1 = require(\"meteor/meteor\");\r\nvar available_form_component_html_1 = require(\"./available-form.component.html\");\r\nvar available_form_component_scss_1 = require(\"./available-form.component.scss\");\r\nvar AvailableFormComponent = (function () {\r\n    function AvailableFormComponent(formBuilder) {\r\n        this.formBuilder = formBuilder;\r\n        this.images = [];\r\n    }\r\n    AvailableFormComponent.prototype.ngOnInit = function () {\r\n        this.addForm = this.formBuilder.group({\r\n            name: ['', forms_1.Validators.required],\r\n            description: ['', forms_1.Validators.required],\r\n            digital: [],\r\n            paperback: [],\r\n            hardcover: [],\r\n            reviews: [],\r\n            public: [false]\r\n        });\r\n    };\r\n    AvailableFormComponent.prototype.addAvailable = function () {\r\n        if (!meteor_1.Meteor.userId()) {\r\n            alert('Please log in to add available item');\r\n            return;\r\n        }\r\n        if (this.addForm.valid) {\r\n            available_collection_1.Available.insert({\r\n                name: this.addForm.value.name,\r\n                description: this.addForm.value.description,\r\n                links: {\r\n                    digital: this.addForm.value.digital,\r\n                    paperback: this.addForm.value.paperback,\r\n                    hardcover: this.addForm.value.hardcover\r\n                },\r\n                reviews: this.addForm.value.reviews,\r\n                images: this.images,\r\n                public: this.addForm.value.public,\r\n                owner: meteor_1.Meteor.userId()\r\n            });\r\n            this.addForm.reset();\r\n        }\r\n    };\r\n    AvailableFormComponent.prototype.onImage = function (imageId) {\r\n        this.images.push(imageId);\r\n    };\r\n    return AvailableFormComponent;\r\n}());\r\nAvailableFormComponent = __decorate([\r\n    core_1.Component({\r\n        selector: 'available-form',\r\n        template: available_form_component_html_1.default,\r\n        styles: [available_form_component_scss_1.default]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof forms_1.FormBuilder !== \"undefined\" && forms_1.FormBuilder) === \"function\" && _a || Object])\r\n], AvailableFormComponent);\r\nexports.AvailableFormComponent = AvailableFormComponent;\r\nvar _a;\r\n//# sourceMappingURL=available-form.component.js.map","sourceMap":{"version":3,"file":"available-form.component.js","sourceRoot":"","sources":["client/imports/app/available/available-form.component.ts"],"names":[],"mappings":";AAAA,sCAAkD;AAClD,wCAAoE;AACpE,+EAAmE;AACnE,wCAAuC;AACvC,iFAAuD;AACvD,iFAAoD;AAQpD,IAAa,sBAAsB;IAIlC,gCACS,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAHjC,WAAM,GAAa,EAAE,CAAC;IAInB,CAAC;IAEJ,yCAAQ,GAAR;QACG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACpC,IAAI,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAC/B,WAAW,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YACtC,OAAO,EAAE,EAAE;YACX,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,EAAE;YACb,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,CAAC,KAAK,CAAC;SAChB,CAAC,CAAC;IACL,CAAC;IAEF,6CAAY,GAAZ;QACC,EAAE,CAAA,CAAC,CAAC,eAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACrB,KAAK,CAAC,qCAAqC,CAAC,CAAC;YAC7C,MAAM,CAAC;QACR,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;YACxB,gCAAS,CAAC,MAAM,CAAC;gBAChB,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI;gBAC7B,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW;gBAC3C,KAAK,EAAE;oBACN,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO;oBACnC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS;oBACvC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS;iBACvC;gBACD,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO;gBACnC,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM;gBACjC,KAAK,EAAE,eAAM,CAAC,MAAM,EAAE;aACtB,CAAC,CAAC;YAEH,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;QACtB,CAAC;IACF,CAAC;IAED,wCAAO,GAAP,UAAQ,OAAe;QACtB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC3B,CAAC;IACF,6BAAC;AAAD,CAAC,AAhDD,IAgDC;AAhDY,sBAAsB;IANlC,gBAAS,CAAC;QACV,QAAQ,EAAE,gBAAgB;QAC1B,QAAQ,yCAAA;QACR,MAAM,EAAE,CAAE,uCAAK,CAAE;KACjB,CAAC;yDAOqB,mBAAW,oBAAX,mBAAW;GALrB,sBAAsB,CAgDlC;AAhDY,wDAAsB","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Available } from '/both/collections/available.collection';\nimport { Meteor } from 'meteor/meteor';\nimport template from './available-form.component.html';\nimport style from './available-form.component.scss';\n\n@Component({\n\tselector: 'available-form',\n\ttemplate,\n\tstyles: [ style ]\n})\n\nexport class AvailableFormComponent implements OnInit {\n\taddForm: FormGroup;\n\timages: string[] = [];\n\n\tconstructor(\n\t\tprivate formBuilder: FormBuilder\n\t) {}\n\n\tngOnInit() {\n    this.addForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      digital: [],\n      paperback: [],\n      hardcover: [],\n      reviews: [],\n      public: [false]\n    });\n  }\n\n\taddAvailable(): void {\n\t\tif(!Meteor.userId()) {\n\t\t\talert('Please log in to add available item');\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.addForm.valid) {\n\t\t\tAvailable.insert({\n\t\t\t\tname: this.addForm.value.name,\n\t\t\t\tdescription: this.addForm.value.description,\n\t\t\t\tlinks: { \n\t\t\t\t\tdigital: this.addForm.value.digital, \n\t\t\t\t\tpaperback: this.addForm.value.paperback, \n\t\t\t\t\thardcover: this.addForm.value.hardcover \n\t\t\t\t},\n\t\t\t\treviews: this.addForm.value.reviews,\n\t\t\t\timages: this.images,\n\t\t\t\tpublic: this.addForm.value.public,\n\t\t\t\towner: Meteor.userId()\n\t\t\t});\n\n\t\t\tthis.addForm.reset();\n\t\t}\n\t}\n\n\tonImage(imageId: string) {\n\t\tthis.images.push(imageId);\n\t}\n}"]},"version":"1","isExternal":true,"dependencies":{"modules":["/both/collections/available.collection.ts"],"refFiles":[],"refTypings":[],"mappings":[{"modulePath":"@angular/core","resolvedPath":null,"external":false,"resolved":false},{"modulePath":"@angular/forms","resolvedPath":null,"external":false,"resolved":false},{"modulePath":"/both/collections/available.collection","resolvedPath":"/both/collections/available.collection","external":false,"resolved":true},{"modulePath":"meteor/meteor","resolvedPath":null,"external":false,"resolved":false},{"modulePath":"./available-form.component.html","resolvedPath":null,"external":false,"resolved":false},{"modulePath":"./available-form.component.scss","resolvedPath":null,"external":false,"resolved":false}]},"diagnostics":{"syntacticErrors":[],"semanticErrors":[{"code":2307,"fileName":"client/imports/app/available/available-form.component.ts","message":"Cannot find module '@angular/core'.","line":1,"column":35},{"code":2307,"fileName":"client/imports/app/available/available-form.component.ts","message":"Cannot find module '@angular/forms'.","line":2,"column":52},{"code":2307,"fileName":"client/imports/app/available/available-form.component.ts","message":"Cannot find module 'meteor/meteor'.","line":4,"column":24}]},"hash":"981108922d9cf830996f17447a168d1cab64895e"}